<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_376096_cxp.UIPolicyHelper</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>UIPolicyHelper</name>
        <script><![CDATA[/* global Class, global, GlideRecord */
/* eslint no-undef: "error" */
var UIPolicyHelper = Class.create();
UIPolicyHelper.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	generateUIPolicyMessage: function (uiPolicyGr) {
		return "In order for <strong>UI Policy Button Actions</strong> to work, the following adjustments have to be made to the UI Policy:<br />"
			+ "<strong>Run scripts:</strong> true<br />"
			+ "<strong>Run scripts in UI type:</strong> All<br />"
			+ "<strong>Execute if true:<br /></strong></p>"
			+ "<pre>" + this.generateUIPolicyScript(uiPolicyGr, true) + "</pre>"
			+ "<strong>Execute if false:<br /></strong>"
			+ "<pre>" + this.generateUIPolicyScript(uiPolicyGr, false) + "</pre>";
	},
	
	generateUIPolicyScript: function (uiPolicyGr, execType) {
		return "function onCondition() {\n"
			+ "\tif (typeof g_ui_scripts !== 'undefined') {\n"
			+ "\t\t// Portal\n"
			+ "\t\tg_ui_scripts['x_376096_cxp.UIPolicyButtonActionHandler']('" + uiPolicyGr.sys_id + "', " + execType + ", this);\n"
			+ "\t} else {\n"
			+ "\t\t// Classic UI\n"
			+ "\t\tScriptLoader.getScripts(['x_376096_cxp.UIPolicyButtonActionHandler.jsdbx'], function () {\n"
			+ "\t\t\tUIPolicyButtonActionHandler('" + uiPolicyGr.sys_id + "', " + execType + ");\n"
			+ "\t\t});\n"
			+ "\t}\n"
			+ "}\n";
	},
	
	testUIPolicy: function (uiPolicyGr, skipButtonActionLookup) {
		var sysId = uiPolicyGr.getUniqueValue();
		
		if (!skipButtonActionLookup) {
			var uiPolicyButtonGr = new GlideRecord('x_376096_cxp_ui_policy_button_action');
			uiPolicyButtonGr.addQuery('ui_policy', sysId);
			uiPolicyButtonGr.setLimit(1);
			uiPolicyButtonGr.query();
			
			// if the ui policy does not have any "UI Policy Button Action" there is no need for the script
			if (!uiPolicyButtonGr.hasNext()) {
				return 'valid';
			}
		}
		
		if (uiPolicyGr.run_scripts) {
			var scriptFalse = uiPolicyGr.script_false.toString();
			var scriptTrue = uiPolicyGr.script_true.toString();
			if (scriptFalse.indexOf('// cxp-ignore-atf') == -1
				&& scriptTrue.indexOf('// cxp-ignore-atf') == -1) {
				if (uiPolicyGr.ui_type == '10' // Run scripts in UI type: All
					&& scriptFalse.indexOf(sysId) > 0 && scriptTrue.indexOf(sysId) > 0
					&& scriptTrue.indexOf('g_ui_scripts') > 0 && scriptFalse.indexOf('g_ui_scripts') > 0
					&& scriptTrue.indexOf('ScriptLoader') > 0 && scriptFalse.indexOf('ScriptLoader') > 0
					&& scriptTrue.indexOf('UIPolicyButtonActionHandler') > 0 && scriptFalse.indexOf('UIPolicyButtonActionHandler') > 0) {
					return 'valid';
				} else {
					return 'invalid';
				}
			} else {
				return 'ignored';
			}
		}
		
		return 'invalid';
	},
	
	getButtonActions: function () {
		var uiPolicy = this.getParameter('ui_policy');
		if (uiPolicy) {
			var buttonActionGr = new GlideRecord('x_376096_cxp_ui_policy_button_action');
			buttonActionGr.addQuery('ui_policy', uiPolicy);
			buttonActionGr.query();
			
			var buttonActions = [];
			while (buttonActionGr.next()) {
				buttonActions.push({
					button: buttonActionGr.button.toString(),
					visible: buttonActionGr.visible.toString(),
					disable: buttonActionGr.disable.toString()
				});
			}
			
			return JSON.stringify(buttonActions);
		}
		
		return '[]';
	},

    type: 'UIPolicyHelper'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-05 16:01:42</sys_created_on>
        <sys_id>c73d080197e451102f77b4b3f153af7e</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>UIPolicyHelper</sys_name>
        <sys_package display_value="Classic Experience" source="x_376096_cxp">3c8bfe3897ac11102f77b4b3f153af0e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Classic Experience">3c8bfe3897ac11102f77b4b3f153af0e</sys_scope>
        <sys_update_name>sys_script_include_c73d080197e451102f77b4b3f153af7e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-06 12:34:48</sys_updated_on>
    </sys_script_include>
</record_update>
